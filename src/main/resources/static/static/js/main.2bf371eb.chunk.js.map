{"version":3,"sources":["actions/projectActions.js","actions/types.js","components/project/ProjectItem.js","components/project/CreateProjectButton.js","components/DashBoard.js","securityUtils/setJWTToken.js","actions/securityActions.js","components/Layout/Header.js","components/project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/project/UpdateProject.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","securityUtils/SecureRoute.js","App.js","serviceWorker.js","index.js"],"names":["createProject","project","history","dispatch","a","async","axios","post","type","payload","push","response","data","ProjectItem","onDeleteClick","id","props","deleteProject","this","className","projectIdentifier","projectName","description","to","onClick","bind","Component","propType","PropTypes","func","isRequired","connect","window","confirm","delete","CreateProjectButton","Fragment","DashBoard","getProjects","projects","map","key","state","get","res","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","href","headerLinks","security","validToken","user","userIsNotAuthenticated","userIsAuthenticated","aria-hidden","fullName","data-toggle","data-target","AddProject","start_date","end_date","errors","onChange","onSubmit","nextProps","setState","e","target","name","value","preventDefault","newProject","classnames","placeholder","initialState","project_tasks","project_task","booleanActionPayload","combineReducers","action","filter","backlog","projectSequence","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","match","params","getProject","updateProject","disabled","ProjectTask","backlog_id","pt_id","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","Backlog","tasks","project_tasks_prop","todoItems","inProgressItems","doneItems","i","length","status","ProjectBoard","getBacklog","BoardContent","projectNotFound","role","boardAlgorithm","AddProjectTask","dueDate","onChance","newTask","addProjectTask","UpdateProjectTask","create_At","update_At","getProjectTask","Date","updateProjectTask","patch","Landing","Register","username","password","confirmPassword","newUser","createNewUser","Login","LoginRequest","login","setItem","decoded","jwt_decode","component","otherProps","render","jwtToken","JWTToken","decoded_jwtToken","currentTime","now","exp","App","exact","path","Boolean","hostname","ReactDOM","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2bf371eb.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\r\n\r\nexport const createProject = (project, history) => async dispatch => {\r\n  try {\r\n    await axios.post(\"/api/project\", project);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n    history.push(\"/dashboard\");\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjects = () => async dispatch => {\r\n  const res = await axios.get(\"/api/project/all\");\r\n  dispatch({\r\n    type: GET_PROJECTS,\r\n    payload: res.data\r\n  });\r\n};\r\n\r\nexport const getProject = (id, history) => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/project/${id}`);\r\n    dispatch({\r\n      type: GET_PROJECT,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    history.push(\"/dashboard\");\r\n  }\r\n};\r\n\r\nexport const deleteProject = id => async dispatch => {\r\n  if (window.confirm(\"Are you sure you want to Delete this?? no take backs.\")) {\r\n    await axios.delete(`/api/project/${id}`);\r\n    dispatch({\r\n      type: DELETE_PROJECT,\r\n      payload: id\r\n    });\r\n  }\r\n};\r\n","//Project Action Types.\r\nexport const GET_ERRORS = \"GET_ERRORS\";\r\nexport const GET_PROJECTS = \"GET_PROJECTS\";\r\nexport const GET_PROJECT = \"GET_PROJECT\";\r\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\r\n\r\n//Backlog Action Types.\r\nexport const GET_BACKLOG = \"GET_BACKLOG\";\r\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\r\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\r\n\r\n//Security Action Types.\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteProject } from \"../../actions/projectActions\";\r\n\r\nclass ProjectItem extends Component {\r\n  onDeleteClick = id => {\r\n    this.props.deleteProject(id);\r\n  };\r\n\r\n  render() {\r\n    const { project } = this.props;\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"card card-body bg-light mb-3\">\r\n          <div className=\"row\">\r\n            <div className=\"col-2\">\r\n              <span className=\"mx-auto\">{project.projectIdentifier}</span>\r\n            </div>\r\n            <div className=\"col-lg-6 col-md-4 col-8\">\r\n              <h3>{project.projectName}</h3>\r\n              <p>{project.description}</p>\r\n            </div>\r\n            <div className=\"col-md-4 d-none d-lg-block\">\r\n              <ul className=\"list-group\">\r\n                <Link to={`/projectBoard/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item board\">\r\n                    <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\r\n                  </li>\r\n                </Link>\r\n                <Link to={`/updateProject/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item update\">\r\n                    <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\r\n                  </li>\r\n                </Link>\r\n\r\n                <li\r\n                  className=\"list-group-item delete\"\r\n                  onClick={this.onDeleteClick.bind(\r\n                    this,\r\n                    project.projectIdentifier\r\n                  )}\r\n                >\r\n                  <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectItem.propType = {\r\n  deleteProject: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { deleteProject })(ProjectItem);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction CreateProjectButton() {\r\n  return (\r\n    <React.Fragment>\r\n      <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\r\n        Create a Project\r\n      </Link>\r\n    </React.Fragment>\r\n  );\r\n}\r\nexport default CreateProjectButton;\r\n","import React, { Component } from \"react\";\r\nimport ProjectItem from \"./project/ProjectItem\";\r\nimport CreateProjectButton from \"./project/CreateProjectButton\";\r\nimport { connect } from \"react-redux\";\r\nimport { getProjects } from \"../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass DashBoard extends Component {\r\n  componentDidMount() {\r\n    this.props.getProjects();\r\n  }\r\n\r\n  render() {\r\n    const { projects } = this.props.project;\r\n\r\n    return (\r\n      <div className=\"projects\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <h1 className=\"display-4 text-center\">Projects</h1>\r\n              <br />\r\n              <CreateProjectButton />\r\n\r\n              <br />\r\n              <hr />\r\n              {projects.map(project => (\r\n                <ProjectItem key={project.id} project={project} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDashBoard.propTypes = {\r\n  project: PropTypes.object.isRequired,\r\n  getProjects: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project: state.project\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProjects })(DashBoard);\r\n","import axios from \"axios\";\r\n\r\nconst setJWTToken = token => {\r\n  if (token) {\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\n\r\nexport default setJWTToken;\r\n","import axios from \"axios\";\r\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\r\nimport setJWTToken from \"../securityUtils/setJWTToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const createNewUser = (newUser, history) => async dispatch => {\r\n  try {\r\n    await axios.post(\"/api/users/register\", newUser);\r\n    history.push(\"/login\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const login = LoginRequest => async dispatch => {\r\n  try {\r\n    // post => Login request\r\n    const res = await axios.post(\"/api/users/login\", LoginRequest);\r\n    // extract token from res data\r\n    const { token } = res.data;\r\n    // store the token in the localStorage\r\n    localStorage.setItem(\"JWTToken\", token);\r\n    // set our token in header 'Auth'\r\n    setJWTToken(token);\r\n    //decode token on react\r\n    const decoded = jwt_decode(token);\r\n    //dispatch to our security reducer\r\n    dispatch({\r\n      type: SET_CURRENT_USER,\r\n      payload: decoded\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => dispatch => {\r\n  localStorage.removeItem(\"JWTToken\");\r\n  setJWTToken(false);\r\n  dispatch({\r\n    type: SET_CURRENT_USER,\r\n    payload: {}\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../actions/securityActions\";\r\n\r\nclass Header extends Component {\r\n  logout() {\r\n    this.props.logout();\r\n    window.location.href = \"/\";\r\n  }\r\n\r\n  render() {\r\n    const { validToken, user } = this.props.security;\r\n\r\n    const userIsNotAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link \" to=\"/register\">\r\n              Sign Up\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/login\">\r\n              Login\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    const userIsAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/dashboard\">\r\n              Dashboard\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link \" to=\"/dashboard\">\r\n              <i className=\"fa fa-user\" aria-hidden=\"true\"></i>\r\n              {user.fullName}\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link\r\n              className=\"nav-link\"\r\n              to=\"/logout\"\r\n              onClick={this.logout.bind(this)}\r\n            >\r\n              {\" \"}\r\n              Logout\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    let headerLinks;\r\n\r\n    if (validToken && user) {\r\n      headerLinks = userIsAuthenticated;\r\n    } else {\r\n      headerLinks = userIsNotAuthenticated;\r\n    }\r\n\r\n    return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\r\n        <div className=\"container\">\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            Personal Project Management Tool\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#mobile-nav\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n          {headerLinks}\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nHeader.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst masStateToProps = state => ({\r\n  security: state.security\r\n});\r\n\r\nexport default connect(masStateToProps, { logout })(Header);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProject } from \"../../actions/projectActions\";\r\nimport classnames from \"classnames\";\r\n\r\nclass AddProject extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      start_date: \"\",\r\n      end_date: \"\",\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newProject = {\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      start_date: this.state.start_date,\r\n      end_date: this.state.end_date\r\n    };\r\n    this.props.createProject(newProject, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"register\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-8 m-auto\">\r\n                <h5 className=\"display-4 text-center\">Create Project form</h5>\r\n                <hr />\r\n                <form onSubmit={this.onSubmit}>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"projectName\"\r\n                      value={this.state.projectName}\r\n                      className={classnames(\"form-control form-control-lg \", {\r\n                        \"is-invalid\": errors.projectName\r\n                      })}\r\n                      placeholder=\"Project Name\"\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.projectName && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.projectName}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"projectIdentifier\"\r\n                      value={this.state.projectIdentifier}\r\n                      className={classnames(\"form-control form-control-lg \", {\r\n                        \"is-invalid\": errors.projectIdentifier\r\n                      })}\r\n                      placeholder=\"Unique Project ID\"\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.projectIdentifier && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.projectIdentifier}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <textarea\r\n                      className={classnames(\"form-control form-control-lg \", {\r\n                        \"is-invalid\": errors.description\r\n                      })}\r\n                      placeholder=\"Project Description\"\r\n                      name=\"description\"\r\n                      onChange={this.onChange}\r\n                      value={this.state.description}\r\n                    ></textarea>\r\n                    {errors.description && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.description}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <h6>Start Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"start_date\"\r\n                      onChange={this.onChange}\r\n                      value={this.state.start_date}\r\n                    />\r\n                  </div>\r\n                  <h6>Estimated End Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"end_date\"\r\n                      onChange={this.onChange}\r\n                      value={this.state.end_date}\r\n                    />\r\n                  </div>\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mt-4\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddProject.propTypes = {\r\n  createProject: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { createProject })(AddProject);\r\n","import { GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  projects: [],\r\n  project: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_PROJECTS:\r\n      return {\r\n        ...state,\r\n        projects: action.payload\r\n      };\r\n    case GET_PROJECT:\r\n      return {\r\n        ...state,\r\n        project: action.payload\r\n      };\r\n    case DELETE_PROJECT:\r\n      return {\r\n        ...state,\r\n        projects: state.projects.filter(\r\n          project => project.projectIdentifier !== action.payload\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_BACKLOG,\r\n  GET_PROJECT_TASK,\r\n  DELETE_PROJECT_TASK\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  project_tasks: [],\r\n  project_task: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_BACKLOG:\r\n      return {\r\n        ...state,\r\n        project_tasks: action.payload\r\n      };\r\n    case GET_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n        project_task: action.payload\r\n      };\r\n    case DELETE_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n        project_tasks: state.project_tasks.filter(\r\n          project_task => project_task.projectSequence !== action.payload\r\n        )\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_CURRENT_USER } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  user: {},\r\n  validToken: false\r\n};\r\n\r\nconst booleanActionPayload = payload => {\r\n  if (payload) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        validToken: booleanActionPayload(action.payload),\r\n        user: action.payload\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport projectReducer from \"./projectReducer\";\r\nimport backlogReducer from \"./backlogReducer\";\r\nimport securityReducer from \"./securityReducer\";\r\n\r\nexport default combineReducers({\r\n  errors: errorReducer,\r\n  project: projectReducer,\r\n  backlog: backlogReducer,\r\n  security: securityReducer\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst middleware = [thunk];\r\nconst initialState = {};\r\nlet store;\r\nconst ReactReduxDevTools =\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\n\r\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\r\n  store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(applyMiddleware(...middleware), ReactReduxDevTools)\r\n  );\r\n} else {\r\n  store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(applyMiddleware(...middleware))\r\n  );\r\n}\r\n\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport { getProject, createProject } from \"../../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass UpdateProject extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      id: \"\",\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      start_date: \"\",\r\n      end_date: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps });\r\n    }\r\n    const {\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      start_date,\r\n      end_date\r\n    } = nextProps.project;\r\n    this.setState({\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      start_date,\r\n      end_date\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getProject(id, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const updateProject = {\r\n      id: this.state.id,\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      start_date: this.state.start_date,\r\n      end_date: this.state.end_date\r\n    };\r\n\r\n    this.props.createProject(updateProject, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"project\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h5 className=\"display-4 text-center\">Update Project form</h5>\r\n              <hr />\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.projectName\r\n                    })}\r\n                    placeholder=\"Project Name\"\r\n                    name=\"projectName\"\r\n                    value={this.state.projectName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.projectName && (\r\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Unique Project ID\"\r\n                    name=\"projectIdentifier\"\r\n                    value={this.state.projectIdentifier}\r\n                    onChange={this.onChange}\r\n                    disabled\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.description\r\n                    })}\r\n                    placeholder=\"Project Description\"\r\n                    name=\"description\"\r\n                    onChange={this.onChange}\r\n                    value={this.state.description}\r\n                  />\r\n                  {errors.description && (\r\n                    <div className=\"invalid-feedback\">{errors.description}</div>\r\n                  )}\r\n                </div>\r\n                <h6>Start Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"start_date\"\r\n                    value={this.state.start_date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Estimated End Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"end_date\"\r\n                    value={this.state.end_date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProject.propTypes = {\r\n  getProject: PropTypes.func.isRequired,\r\n  createProject: PropTypes.func.isRequired,\r\n  project: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project: state.project.project,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProject, createProject })(\r\n  UpdateProject\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { deleteProjectTask } from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass ProjectTask extends Component {\r\n  onDeleteClick(backlog_id, pt_id) {\r\n    this.props.deleteProjectTask(backlog_id, pt_id);\r\n  }\r\n\r\n  render() {\r\n    const { project_task } = this.props;\r\n    let priorityString;\r\n    let priorityClass;\r\n\r\n    if (project_task.priority === 1) {\r\n      priorityClass = \"bg-danger text-light\";\r\n      priorityString = \" High\";\r\n    }\r\n    if (project_task.priority === 2) {\r\n      priorityClass = \"bg-warning text-light\";\r\n      priorityString = \" Medium\";\r\n    }\r\n    if (project_task.priority === 3) {\r\n      priorityClass = \"bg-success  text-light\";\r\n      priorityString = \" Low\";\r\n    }\r\n\r\n    return (\r\n      <div className=\"card mb-1 bg-light\">\r\n        <div className={`card-header text-primary ${priorityClass}`}>\r\n          ID: {project_task.projectSequence} | Priority:{priorityString}\r\n        </div>\r\n        <div className=\"card-body bg-light\">\r\n          <h5 className=\"card-title\">{project_task.summary}</h5>\r\n          <p className=\"card-text text-truncate \">\r\n            {project_task.acceptanceCriteria}\r\n          </p>\r\n          <Link\r\n            to={`/updateProjectTask/${project_task.projectIdentifier}/${project_task.projectSequence}`}\r\n            className=\"btn btn-primary\"\r\n          >\r\n            View / Update\r\n          </Link>\r\n\r\n          <button\r\n            className=\"btn btn-danger ml-4\"\r\n            onClick={this.onDeleteClick.bind(\r\n              this,\r\n              project_task.projectIdentifier,\r\n              project_task.projectSequence\r\n            )}\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectTask.propTypes = {\r\n  deleteProjectTask: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { deleteProjectTask })(ProjectTask);\r\n","import axios from \"axios\";\r\nimport {\r\n  GET_ERRORS,\r\n  GET_BACKLOG,\r\n  GET_PROJECT_TASK,\r\n  DELETE_PROJECT_TASK\r\n} from \"./types\";\r\n\r\nexport const addProjectTask = (\r\n  backlog_id,\r\n  project_task,\r\n  history\r\n) => async dispatch => {\r\n  try {\r\n    await axios.post(`/api/backlog/${backlog_id}`, project_task);\r\n    history.push(`/projectBoard/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getBacklog = backlog_id => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/backlog/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_BACKLOG,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjectTask = (\r\n  backlog_id,\r\n  pt_id,\r\n  history\r\n) => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\r\n    dispatch({\r\n      type: GET_PROJECT_TASK,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    history.push(\"/dashboard\");\r\n  }\r\n};\r\n\r\nexport const updateProjectTask = (\r\n  backlog_id,\r\n  pt_id,\r\n  project_task,\r\n  history\r\n) => async dispatch => {\r\n  try {\r\n    await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, project_task);\r\n    history.push(`/projectBoard/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteProjectTask = (backlog_id, pt_id) => async dispatch => {\r\n  if (\r\n    window.confirm(`You try to Delete Project Task ${pt_id} , are you SURE ?`)\r\n  ) {\r\n    await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\r\n    dispatch({\r\n      type: DELETE_PROJECT_TASK,\r\n      payload: pt_id\r\n    });\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport ProjectTask from \"./ProjectTasks/ProjectTask\";\r\n\r\nclass Backlog extends Component {\r\n  render() {\r\n    const { project_tasks_prop } = this.props;\r\n    const tasks = project_tasks_prop.map(project_task => (\r\n      <ProjectTask key={project_task.id} project_task={project_task} />\r\n    ));\r\n\r\n    let todoItems = [];\r\n    let inProgressItems = [];\r\n    let doneItems = [];\r\n\r\n    for (let i = 0; i < tasks.length; i++) {\r\n      // console.log(tasks[i]);\r\n\r\n      if (tasks[i].props.project_task.status === \"TO_DO\") {\r\n        todoItems.push(tasks[i]);\r\n      }\r\n      if (tasks[i].props.project_task.status === \"IN_PROGRESS\") {\r\n        inProgressItems.push(tasks[i]);\r\n      }\r\n      if (tasks[i].props.project_task.status === \"DONE\") {\r\n        doneItems.push(tasks[i]);\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-secondary text-white\">\r\n                <h3>TO DO</h3>\r\n              </div>\r\n            </div>\r\n\r\n            {todoItems}\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-primary text-white\">\r\n                <h3>In Progress</h3>\r\n              </div>\r\n            </div>\r\n\r\n            {inProgressItems}\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-success text-white\">\r\n                <h3>Done</h3>\r\n              </div>\r\n            </div>\r\n\r\n            {doneItems}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Backlog;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Backlog from \"./Backlog\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getBacklog } from \"../../actions/backlogActions\";\r\n\r\nclass ProjectBoard extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getBacklog(id);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  //\r\n\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { project_tasks } = this.props.backlog;\r\n    const { errors } = this.state;\r\n\r\n    let BoardContent;\r\n\r\n    const boardAlgorithm = (errors, project_tasks) => {\r\n      if (project_tasks.length < 1) {\r\n        if (errors.projectNotFound) {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              {errors.projectNotFound}\r\n            </div>\r\n          );\r\n        } else if (errors.projectIdentifier) {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              {errors.projectIdentifier}\r\n            </div>\r\n          );\r\n        } else {\r\n          return (\r\n            <div className=\"alert alert-info text-center\" role=\"alert\">\r\n              No Project Tasks on this board\r\n            </div>\r\n          );\r\n        }\r\n      } else {\r\n        return <Backlog project_tasks_prop={project_tasks} />;\r\n      }\r\n    };\r\n\r\n    BoardContent = boardAlgorithm(errors, project_tasks);\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\r\n          <i className=\"fas fa-plus-circle\"> Create Project Task</i>\r\n        </Link>\r\n        <br />\r\n        <hr />\r\n        {BoardContent}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectBoard.propTypes = {\r\n  backlog: PropTypes.object.isRequired,\r\n  getBacklog: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  backlog: state.backlog,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { getBacklog })(ProjectBoard);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { addProjectTask } from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass AddProjectTask extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { id } = this.props.match.params;\r\n\r\n    this.state = {\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: 0,\r\n      priority: \"\",\r\n      dueDate: \"\",\r\n      projectIdentifier: id,\r\n      errors: {}\r\n    };\r\n    this.onChance = this.onChance.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChance(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const newTask = {\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate\r\n    };\r\n    this.props.addProjectTask(\r\n      this.state.projectIdentifier,\r\n      newTask,\r\n      this.props.history\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Add Project Task</h4>\r\n              <p className=\"lead text-center\">Project Name + Project Code</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.summary\r\n                    })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChance}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChance}\r\n                  ></textarea>\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChance}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onChance}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChance}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddProjectTask.propTypes = {\r\n  addProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { addProjectTask })(AddProjectTask);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport {\r\n  getProjectTask,\r\n  updateProjectTask\r\n} from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass UpdateProjectTask extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      id: \"\",\r\n      projectSequence: \"\",\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: \"\",\r\n      priority: \"\",\r\n      dueDate: null,\r\n      create_At: null,\r\n      update_At: null,\r\n      projectIdentifier: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { backlog_id, pt_id, history } = this.props.match.params;\r\n    this.props.getProjectTask(backlog_id, pt_id, history);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n\r\n    const {\r\n      id,\r\n      projectSequence,\r\n      summary,\r\n      acceptanceCriteria,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      create_At,\r\n      update_At,\r\n      projectIdentifier\r\n    } = nextProps.project_task;\r\n\r\n    this.setState({\r\n      id,\r\n      projectSequence,\r\n      summary,\r\n      acceptanceCriteria,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      create_At,\r\n      update_At,\r\n      projectIdentifier\r\n    });\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const UpdateProjectTask = {\r\n      id: this.state.id,\r\n      projectSequence: this.state.projectSequence,\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate,\r\n      create_At: this.state.create_At,\r\n      update_At: new Date(),\r\n      projectIdentifier: this.state.projectIdentifier\r\n    };\r\n\r\n    // console.log(UpdateProjectTask);\r\n    this.props.updateProjectTask(\r\n      this.state.projectIdentifier,\r\n      this.state.projectSequence,\r\n      UpdateProjectTask,\r\n      this.props.history\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link\r\n                to={`/projectBoard/${this.state.projectIdentifier}`}\r\n                className=\"btn btn-light\"\r\n              >\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Update Project Task</h4>\r\n              <p className=\"lead text-center\">\r\n                Project Name: {this.state.projectIdentifier} | ProjectTaskID:\r\n                {\"    \"}\r\n                {this.state.projectSequence}\r\n              </p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.summary\r\n                    })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  ></textarea>\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.summary\r\n                    })}\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProjectTask.propTypes = {\r\n  getProjectTask: PropTypes.func.isRequired,\r\n  project_task: PropTypes.object.isRequired,\r\n  updateProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project_task: state.backlog.project_task,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProjectTask, updateProjectTask })(\r\n  UpdateProjectTask\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { PropTypes } from \"prop-types\";\r\n\r\nclass Landing extends Component {\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"landing\">\r\n        <div className=\"light-overlay landing-inner text-dark\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 text-center\">\r\n                <h1 className=\"display-3 mb-4\">\r\n                  Personal Project Management Tool\r\n                </h1>\r\n                <p className=\"lead\">\r\n                  Create your account to join active projects or start your own\r\n                </p>\r\n                <hr />\r\n                <Link className=\"btn btn-lg btn-primary mr-2 \" to=\"/register\">\r\n                  Sign Up\r\n                </Link>\r\n                <Link to=\"/login\" className=\"btn btn-lg btn-secondary mr-2\">\r\n                  Login\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLanding.propTypes = {\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\n\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React, { Component } from \"react\";\r\nimport { createNewUser } from \"../../actions/securityActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Register extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      fullName: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors\r\n      });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newUser = {\r\n      username: this.state.username,\r\n      fullName: this.state.fullName,\r\n      password: this.state.password,\r\n      confirmPassword: this.state.confirmPassword\r\n    };\r\n\r\n    this.props.createNewUser(newUser, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"register\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n              <p className=\"lead text-center\">Create your Account</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.fullName\r\n                    })}\r\n                    placeholder=\"Full Name\"\r\n                    name=\"fullName\"\r\n                    value={this.state.fullName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.fullName && (\r\n                    <div className=\"invalid-feedback\">{errors.fullName}</div>\r\n                  )}\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username\r\n                    })}\r\n                    placeholder=\"UserName (Email Address)\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\">{errors.username}</div>\r\n                  )}\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                  )}\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.confirmPassword\r\n                    })}\r\n                    placeholder=\"Confirm Password\"\r\n                    name=\"confirmPassword\"\r\n                    value={this.state.confirmPassword}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.confirmPassword && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.confirmPassword}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRegister.propTypes = {\r\n  createNewUser: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors,\r\n  security: state.security\r\n});\r\n\r\nexport default connect(mapStateToProps, { createNewUser })(Register);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\nimport { login } from \"../../actions/securityActions\";\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const LoginRequest = {\r\n      username: this.state.username,\r\n      password: this.state.password\r\n    };\r\n\r\n    this.props.login(LoginRequest);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"login\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Log In</h1>\r\n\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username\r\n                    })}\r\n                    placeholder=\"Email Address\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\">{errors.username}</div>\r\n                  )}\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                  )}\r\n                </div>\r\n\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  security: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\r\n  <Route\r\n    {...otherProps}\r\n    render={props =>\r\n      security.validToken === true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nSecuredRoute.propTypes = {\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\n\r\nexport default connect(mapStateToProps)(SecuredRoute);\r\n","import React from \"react\";\nimport \"./App.css\";\nimport DashBoard from \"./components/DashBoard\";\nimport Header from \"./components/Layout/Header\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport AddProject from \"./components/project/AddProject\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport UpdateProject from \"./components/project/UpdateProject\";\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\nimport AddProjectTask from \"./components/ProjectBoard/ProjectTasks/AddProjectTask\";\nimport UpdateProjectTask from \"./components/ProjectBoard/ProjectTasks/UpdateProjectTask\";\nimport Landing from \"./components/Layout/Landing\";\nimport Register from \"./components/UserManagement/Register\";\nimport Login from \"./components/UserManagement/Login\";\nimport jwt_decode from \"jwt-decode\";\nimport setJWTToken from \"./securityUtils/setJWTToken\";\nimport { SET_CURRENT_USER } from \"./actions/types\";\nimport { logout } from \"./actions/securityActions\";\nimport SecuredRoute from \"./securityUtils/SecureRoute\";\n\nconst jwtToken = localStorage.JWTToken;\n\nif (jwtToken) {\n  setJWTToken(jwtToken);\n  const decoded_jwtToken = jwt_decode(jwtToken);\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decoded_jwtToken\n  });\n\n  const currentTime = Date.now();\n  if (decoded_jwtToken.exp < currentTime) {\n    store.dispatch(logout());\n    window.location.href = \"/\";\n  }\n}\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"App\">\n          <Header />\n\n          {\n            //Public\n          }\n          <Route exact path=\"/\" component={Landing} />\n          <Route exact path=\"/register\" component={Register} />\n          <Route exact path=\"/login\" component={Login} />\n          {\n            //Private\n          }\n          <Switch>\n            <SecuredRoute exact path=\"/dashboard\" component={DashBoard} />\n            <SecuredRoute exact path=\"/addProject\" component={AddProject} />\n            <SecuredRoute\n              exact\n              path=\"/updateProject/:id\"\n              component={UpdateProject}\n            />\n            <SecuredRoute\n              exact\n              path=\"/projectBoard/:id\"\n              component={ProjectBoard}\n            />\n            <SecuredRoute\n              exact\n              path=\"/addProjectTask/:id\"\n              component={AddProjectTask}\n            />\n            <SecuredRoute\n              exact\n              path=\"/updateProjectTask/:backlog_id/:pt_id\"\n              component={UpdateProjectTask}\n            />\n          </Switch>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}